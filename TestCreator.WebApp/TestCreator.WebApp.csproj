<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <AssemblyName>TestCreator.WebApp</AssemblyName>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Mapster" Version="7.3.0" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.7" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.7" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.7" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.7.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\components\about\about.component.ts" />
    <None Remove="ClientApp\src\app\components\answer\answer-edit.component.ts" />
    <None Remove="ClientApp\src\app\components\answer\answer-list.component.ts" />
    <None Remove="ClientApp\src\app\components\login\login.component.ts" />
    <None Remove="ClientApp\src\app\components\pagenotfound\pagenotfound.component.ts" />
    <None Remove="ClientApp\src\app\components\question\question-edit.component.ts" />
    <None Remove="ClientApp\src\app\components\question\question-list.component.ts" />
    <None Remove="ClientApp\src\app\components\result\result-edit.component.ts" />
    <None Remove="ClientApp\src\app\components\result\result-list.component.ts" />
    <None Remove="ClientApp\src\app\components\test-list.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test-edit.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test-result.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test-search-result.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test-search.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test-start.component.ts" />
    <None Remove="ClientApp\src\app\components\test\test.component.ts" />
    <None Remove="ClientApp\src\app\components\user\register.component.ts" />
    <None Remove="ClientApp\src\app\interfaces\Answer.ts" />
    <None Remove="ClientApp\src\app\interfaces\Question.ts" />
    <None Remove="ClientApp\src\app\interfaces\Result.ts" />
    <None Remove="ClientApp\src\app\interfaces\test.attempt.answer.ts" />
    <None Remove="ClientApp\src\app\interfaces\test.attempt.entry.ts" />
    <None Remove="ClientApp\src\app\interfaces\test.attempt.result.ts" />
    <None Remove="ClientApp\src\app\interfaces\test.attempt.ts" />
    <None Remove="ClientApp\src\app\interfaces\Test.ts" />
    <None Remove="ClientApp\src\app\interfaces\token.response.ts" />
    <None Remove="ClientApp\src\app\interfaces\user.ts" />
    <None Remove="ClientApp\src\app\services\auth.interceptor.ts" />
    <None Remove="ClientApp\src\app\services\auth.response.interceptor.ts" />
    <None Remove="ClientApp\src\app\services\auth.service.ts" />
    <None Remove="ClientApp\src\app\services\test.result.service.ts" />
    <None Remove="ClientApp\src\tests\app.component.spec.ts" />
    <None Remove="ClientApp\src\tests\services\test.result.service.spec.ts" />  
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\components\about\about.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\answer\answer-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\answer\answer-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\login\login.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\pagenotfound\pagenotfound.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\question\question-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\question\question-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\result\result-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\result\result-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-search-result.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-search.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-start.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\test\test-result.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\components\user\register.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\answer.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\question.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\result.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\test.attempt.answer.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\test.attempt.entry.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\test.attempt.result.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\test.attempt.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\test.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\token.response.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\interfaces\user.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\auth.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\auth.response.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\test.result.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\tests\app.component.spec.ts" />
    <TypeScriptCompile Include="ClientApp\src\tests\services\test.result.service.spec.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\tests\components\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TestCreator.Data\TestCreator.Data.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="Build Angular" Condition="'$(Configuration)' != 'Release'" BeforeTargets="Build">
    <Message Text="Angular Build In Progress" Importance="high" />
    <Exec Command="ng build" WorkingDirectory="ClientApp" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
